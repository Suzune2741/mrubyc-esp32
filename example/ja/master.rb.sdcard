if SDSPI.spi_bus_initialize(23, 19, 18) # MOSI, MISO, CLOCKをわたす
  if SDSPI.esp_vfs_fat_sdspi_mount(5, "/sdcard") # ChipSelect, MountPointをわたす
    # ファイルの削除，削除するファイル名をわたす
    ESP32_STDIO.remove("/sdcard/bar.txt")
    ESP32_STDIO.remove("/sdcard/piyo.txt")

    # open.txtを開くテスト
    puts "open foo.txt"
    # fopenで開く, rは読み込みモード，ファイル名とモードをわたす
    fid = ESP32_STDIO.fopen("/sdcard/foo.txt", "r")
    # fgetsでファイルの内容を読む，二つの引数は読みこむ最大文字数
    cont = ESP32_STDIO.fgets(fid, 64)
    puts cont
    # fcloseを使ってファイルを閉じる
    ESP32_STDIO.fclose(fid)

    # bar.txtを作って書き込むテスト
    puts "\nHey, create bar.txt and write down"
    # wは書き込みモード
    fid = ESP32_STDIO.fopen("/sdcard/bar.txt", "w")
    # fputsで書き込む
    ESP32_STDIO.fputs(fid, "Hello mruby/c!")
    # fputcは最初の文字だけ書き込まれる
    ESP32_STDIO.fputc(fid, "?")
    ESP32_STDIO.fclose(fid)

    # 名前の変更テスト
    puts "\nYo! rename bar.txt to piyo.txt and read it!"
    # bar.txtからpiyo.txtへ
    ESP32_STDIO.rename("/sdcard/bar.txt", "/sdcard/piyo.txt")

    # piyo.txtがちゃんとあるか確認してみる
    fid = ESP32_STDIO.fopen("/sdcard/piyo.txt", "r")
    # "Hello mruby/c!?"と出てくるはず
    cont =ESP32_STDIO.fgets(fid,64)

    # シークのテスト
    puts "\n Let's fseek!"
    # 先頭から5文字目(0から数えて4)に移動する．0は先頭から，1は現在位置から，2は最後から
    ESP32_STDIO.fseek(fid, 4, 0)
    # 現在の位置は？（4になるはず）
    pos = ESP32_STDIO.fgetpos(fid)
    puts "position is ", pos
    puts "\n fgetc, Yah!"
    # 5文字目のHelloのoが表示されるはず
    puts ESP32_STDIO.fgetc(fid)
    puts cont
    ESP32_STDIO.fclose(fid)

    # ファイル・フォルダ一覧を見てみよう
    puts "\nGet ls /sdcard!"
    ls = ESP32_DIRENT.children("/sdcard")
    p ls

    # ファイルの更新日時を調べてみよう
    puts "\nWhen created? Check it now!"
    t = ESP32_DIRENT.fileTime("/sdcard/piyo.txt")
    puts "Year:", t.getYear()
    puts "Month:", t.getMonth()
    
    # 後片付け
    SDSPI.esp_vfs_fat_sdcard_unmount()

  else
    puts "vfat mount error"
  end
  SDSPI.spi_bus_free()
else
  puts "bus initialize error"
end

while true
  puts "hello world from ESP32"
  sleep 100
end
